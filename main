//testing for Final project main
#include <string>
#include <cstdlib>
#include <iostream>
#include <vector>
#include "Assignment.h"
#include "Test.h"

using namespace std;

int main () {
	string answer;
	while(answer != "no"){
		if(answer == "new"){
			cout<<"Would you like to grade a new assignment? (yes/no)\n";
			cin<<answer;
			if(answer == "no"){
				break;
			}
		}
		string input;
		int choice;
		Assignment temp_assignment = new Assignment("");
		Test key = new Test("");
		Test student_test = new Test("");
		while(input != "exit") {
			cout << "\tEnter a number for what you would like to do:\n\t1. Enter Key\n\t2. Enter Test\n\t4. Calculate Statistics\n\t5. Omit a Question\n\t6. Add a Curve\n\t7. Print Grades and Statistics\n\texit\n\n\t";

			cin >> input;


			if (input == "exit") {
				break; //should break the loops if input is exit, otherwise continues to the switch case
			} else {
				choice = atoi(input.c_str());
			}
		

			switch ( choice ) {
				case 1: //key
					string temp_name;
					string temp_file_name;
					cout<<Please enter a name for your assignment.\n";
					cin<<temp_name;
					temp_assignment.set_name = temp_name;
					key.set_name = temp_name;
					cout<<"Please input your test key file name.\n";
					cin<<temp_file_name;
					key.answer_input(temp_file_name);
				break;

				case 2: //enter tests
					string student_name;
					string student_file_name;
					cout<<"Please enter the student's name\n";
					cin<<student_name;
					Test student_test = new Test(student_name);
					cout<<"Please input your student answer file name.\n";
					cin<<student_file_name;
					student_test.answer_input(student_file_name);
					//begin grading student test, add mutator to assignment vector
					temp_assignment.set_vector_index(student_test.grader(student_test.get_vector);
				break;

				case 4: //calculator
					key.organizeGrades();
					key.calculateHigh();
					key.calculateLow();
					key.calculateMean();
					key.calculateMode();
					key.calculateMedian();
					key.printStatistics();
				break;

				case 5: //omitter
					cout << "omitter works\n";
					int deletedIndex;
					cout<<"Please enter the question number that you would like to have omitted\n";
					cin<<deletedIndex;
					if(deletedIndex > 0){
						omitQuestion(student_answers, deletedIndex);
					}
					else{
						cout<<"That question number is invalid\n";
					}
					//this should be able to ignore a specific questions weight on a grade,
					//ideally not by just deleting the index at that point on the key/tests, then
					//send the tests back through the grader code above
				break;

				case 6: //curver
					cout << "curver works\n";
					//ask for what you want the median/mean/percentiles you want the test to
					//be at. Then add points to all the tests (every indices in the array)
					//accordingly
				break;

				case 7: //printer
					cout << "printer works\n";
					//call all the .print methods for the class functions or just cout with pointers
					//and arrays
				break;
			}
		}
	}
	answers = "new";
}
